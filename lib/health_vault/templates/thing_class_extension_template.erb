# -*- ruby -*-
#--
# Copyright 2008 Danny Coates, Ashkan Farhadtouski
# All rights reserved.
# See LICENSE for permissions.
#++
#AUTOGENERATED Thing extension

# Make sure to load the original
require File.join(HEALTHVAULT_ROOT, 'lib', 'generated', 'health_vault', 'wc_data', 'thing', 'thing')
module HealthVault
  module WCData
    module Thing
      class Thing        
        @@class_hash = Hash.new  
      <%- class_hash.each do |key, val| -%>
        @@class_hash['<%= key %>'] = '<%= val %>'
      <%- end -%>
        
        class << self
          def guid_to_class(guid)
            @@class_hash[guid].constantize
          end
      
          def class_to_guid(klass)
            @@class_hash.index(klass.to_s)
          end
        
          def from_data(data)
            guid = class_to_guid(data.class)
            raise "No Guid for #{data.class}" if guid.nil?
            new(:guid => guid){|t| t.add_data_xml(HealthVault::WCData::Thing::DataXml.new(:anything => data)) }
          end
        
        end
      
        def guid
          type_id && type_id.data
        end
      
        def guid=(val)
          self.type_id = HealthVault::WCData::Thing::ThingType.new(:data => HealthVault::WCData::Types::Guid.new(val))
        end

        add_child_method :guid

      end
    end
  end
end
